{"ast":null,"code":"\"use strict\";\n\n!function (e) {\n  \"object\" == typeof module && \"object\" == typeof module.exports ? e(require(\"jquery\"), window, document) : e(jQuery, window, document);\n}(function (u, p, f, e) {\n  function t(e, t) {\n    this.$chartContainer = u(e), this.opts = t, this.defaultOptions = {\n      nodeTitle: \"name\",\n      nodeId: \"id\",\n      toggleSiblingsResp: !1,\n      visibleLevel: 999,\n      chartClass: \"\",\n      exportButton: !1,\n      exportFilename: \"OrgChart\",\n      exportFileextension: \"png\",\n      parentNodeSymbol: \"fa-users\",\n      draggable: !1,\n      direction: \"t2b\",\n      pan: !1,\n      zoom: !1,\n      zoominLimit: 7,\n      zoomoutLimit: .5\n    };\n  }\n\n  t.prototype = {\n    init: function (e) {\n      var n = this;\n      this.options = u.extend({}, this.defaultOptions, this.opts, e);\n      var t = this.$chartContainer;\n      this.$chart && this.$chart.remove();\n      var i = this.options.data,\n          s = this.$chart = u(\"<div>\", {\n        data: {\n          options: this.options\n        },\n        class: \"orgchart\" + (\"\" !== this.options.chartClass ? \" \" + this.options.chartClass : \"\") + (\"t2b\" !== this.options.direction ? \" \" + this.options.direction : \"\"),\n        click: function (e) {\n          u(e.target).closest(\".node\").length || s.find(\".node.focused\").removeClass(\"focused\");\n        }\n      });\n      return \"undefined\" != typeof MutationObserver && this.triggerInitEvent(), \"object\" === u.type(i) ? i instanceof u ? this.buildHierarchy(s, this.buildJsonDS(i.children()), 0, this.options) : this.buildHierarchy(s, this.options.ajaxURL ? i : this.attachRel(i, \"00\")) : (s.append('<i class=\"fa fa-circle-o-notch fa-spin spinner\"></i>'), u.ajax({\n        url: i,\n        dataType: \"json\"\n      }).done(function (e, t, i) {\n        n.buildHierarchy(s, n.options.ajaxURL ? e : n.attachRel(e, \"00\"), 0, n.options);\n      }).fail(function (e, t, i) {\n        console.log(i);\n      }).always(function () {\n        s.children(\".spinner\").remove();\n      })), t.append(s), this.options.exportButton && !t.find(\".oc-export-btn\").length && this.attachExportButton(), this.options.pan && this.bindPan(), this.options.zoom && this.bindZoom(), this;\n    },\n    triggerInitEvent: function () {\n      var s = this,\n          a = new MutationObserver(function (e) {\n        a.disconnect();\n\n        e: for (var t = 0; t < e.length; t++) for (var i = 0; i < e[t].addedNodes.length; i++) if (e[t].addedNodes[i].classList.contains(\"orgchart\") && s.options.initCompleted && \"function\" == typeof s.options.initCompleted) {\n          s.options.initCompleted(s.$chart);\n          var n = u.Event(\"init.orgchart\");\n          s.$chart.trigger(n);\n          break e;\n        }\n      });\n      a.observe(this.$chartContainer[0], {\n        childList: !0\n      });\n    },\n    attachExportButton: function () {\n      var t = this,\n          e = u(\"<button>\", {\n        class: \"oc-export-btn\" + (\"\" !== this.options.chartClass ? \" \" + this.options.chartClass : \"\"),\n        text: \"Export\",\n        click: function (e) {\n          e.preventDefault(), t.export();\n        }\n      });\n      this.$chartContainer.append(e);\n    },\n    setOptions: function (e, t) {\n      return \"string\" == typeof e && (\"pan\" === e && (t ? this.bindPan() : this.unbindPan()), \"zoom\" === e && (t ? this.bindZoom() : this.unbindZoom())), \"object\" == typeof e && (e.data ? this.init(e) : (void 0 !== e.pan && (e.pan ? this.bindPan() : this.unbindPan()), void 0 !== e.zoom && (e.zoom ? this.bindZoom() : this.unbindZoom()))), this;\n    },\n    panStartHandler: function (e) {\n      var a = u(e.delegateTarget);\n      if (u(e.target).closest(\".node\").length || e.touches && 1 < e.touches.length) a.data(\"panning\", !1);else {\n        a.css(\"cursor\", \"move\").data(\"panning\", !0);\n        var t = 0,\n            i = 0,\n            n = a.css(\"transform\");\n\n        if (\"none\" !== n) {\n          var s = n.split(\",\");\n          i = -1 === n.indexOf(\"3d\") ? (t = parseInt(s[4]), parseInt(s[5])) : (t = parseInt(s[12]), parseInt(s[13]));\n        }\n\n        var o = 0,\n            d = 0;\n\n        if (e.targetTouches) {\n          if (1 === e.targetTouches.length) o = e.targetTouches[0].pageX - t, d = e.targetTouches[0].pageY - i;else if (1 < e.targetTouches.length) return;\n        } else o = e.pageX - t, d = e.pageY - i;\n\n        a.on(\"mousemove touchmove\", function (e) {\n          if (a.data(\"panning\")) {\n            var t = 0,\n                i = 0;\n\n            if (e.targetTouches) {\n              if (1 === e.targetTouches.length) t = e.targetTouches[0].pageX - o, i = e.targetTouches[0].pageY - d;else if (1 < e.targetTouches.length) return;\n            } else t = e.pageX - o, i = e.pageY - d;\n\n            var n = a.css(\"transform\");\n            if (\"none\" === n) -1 === n.indexOf(\"3d\") ? a.css(\"transform\", \"matrix(1, 0, 0, 1, \" + t + \", \" + i + \")\") : a.css(\"transform\", \"matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, \" + t + \", \" + i + \", 0, 1)\");else {\n              var s = n.split(\",\");\n              -1 === n.indexOf(\"3d\") ? (s[4] = \" \" + t, s[5] = \" \" + i + \")\") : (s[12] = \" \" + t, s[13] = \" \" + i), a.css(\"transform\", s.join(\",\"));\n            }\n          }\n        });\n      }\n    },\n    panEndHandler: function (e) {\n      e.data.chart.data(\"panning\") && e.data.chart.data(\"panning\", !1).css(\"cursor\", \"default\").off(\"mousemove\");\n    },\n    bindPan: function () {\n      this.$chartContainer.css(\"overflow\", \"hidden\"), this.$chart.on(\"mousedown touchstart\", this.panStartHandler), u(f).on(\"mouseup touchend\", {\n        chart: this.$chart\n      }, this.panEndHandler);\n    },\n    unbindPan: function () {\n      this.$chartContainer.css(\"overflow\", \"auto\"), this.$chart.off(\"mousedown touchstart\", this.panStartHandler), u(f).off(\"mouseup touchend\", this.panEndHandler);\n    },\n    zoomWheelHandler: function (e) {\n      var t = e.data.oc;\n      e.preventDefault();\n      var i = 1 + (0 < e.originalEvent.deltaY ? -.2 : .2);\n      t.setChartScale(t.$chart, i);\n    },\n    zoomStartHandler: function (e) {\n      if (e.touches && 2 === e.touches.length) {\n        var t = e.data.oc;\n        t.$chart.data(\"pinching\", !0);\n        var i = t.getPinchDist(e);\n        t.$chart.data(\"pinchDistStart\", i);\n      }\n    },\n    zoomingHandler: function (e) {\n      var t = e.data.oc;\n\n      if (t.$chart.data(\"pinching\")) {\n        var i = t.getPinchDist(e);\n        t.$chart.data(\"pinchDistEnd\", i);\n      }\n    },\n    zoomEndHandler: function (e) {\n      var t = e.data.oc;\n\n      if (t.$chart.data(\"pinching\")) {\n        t.$chart.data(\"pinching\", !1);\n        var i = t.$chart.data(\"pinchDistEnd\") - t.$chart.data(\"pinchDistStart\");\n        0 < i ? t.setChartScale(t.$chart, 1.2) : i < 0 && t.setChartScale(t.$chart, .8);\n      }\n    },\n    bindZoom: function () {\n      this.$chartContainer.on(\"wheel\", {\n        oc: this\n      }, this.zoomWheelHandler), this.$chartContainer.on(\"touchstart\", {\n        oc: this\n      }, this.zoomStartHandler), u(f).on(\"touchmove\", {\n        oc: this\n      }, this.zoomingHandler), u(f).on(\"touchend\", {\n        oc: this\n      }, this.zoomEndHandler);\n    },\n    unbindZoom: function () {\n      this.$chartContainer.off(\"wheel\", this.zoomWheelHandler), this.$chartContainer.off(\"touchstart\", this.zoomStartHandler), u(f).off(\"touchmove\", this.zoomingHandler), u(f).off(\"touchend\", this.zoomEndHandler);\n    },\n    getPinchDist: function (e) {\n      return Math.sqrt((e.touches[0].clientX - e.touches[1].clientX) * (e.touches[0].clientX - e.touches[1].clientX) + (e.touches[0].clientY - e.touches[1].clientY) * (e.touches[0].clientY - e.touches[1].clientY));\n    },\n    setChartScale: function (e, t) {\n      var i = e.data(\"options\"),\n          n = e.css(\"transform\"),\n          s = \"\",\n          a = 1;\n      \"none\" === n ? e.css(\"transform\", \"scale(\" + t + \",\" + t + \")\") : (s = n.split(\",\"), -1 === n.indexOf(\"3d\") ? (a = Math.abs(p.parseFloat(s[3]) * t)) > i.zoomoutLimit && a < i.zoominLimit && e.css(\"transform\", n + \" scale(\" + t + \",\" + t + \")\") : (a = Math.abs(p.parseFloat(s[1]) * t)) > i.zoomoutLimit && a < i.zoominLimit && e.css(\"transform\", n + \" scale3d(\" + t + \",\" + t + \", 1)\"));\n    },\n    buildJsonDS: function (e) {\n      var t = this,\n          i = {\n        name: e.contents().eq(0).text().trim(),\n        relationship: (e.parent().parent().is(\"li\") ? \"1\" : \"0\") + (e.siblings(\"li\").length ? 1 : 0) + (e.children(\"ul\").length ? 1 : 0)\n      };\n      return u.each(e.data(), function (e, t) {\n        i[e] = t;\n      }), e.children(\"ul\").children().each(function () {\n        i.children || (i.children = []), i.children.push(t.buildJsonDS(u(this)));\n      }), i;\n    },\n    attachRel: function (t, e) {\n      var i = this;\n      return t.relationship = e + (t.children && 0 < t.children.length ? 1 : 0), t.children && t.children.forEach(function (e) {\n        i.attachRel(e, \"1\" + (1 < t.children.length ? 1 : 0));\n      }), t;\n    },\n    loopChart: function (e) {\n      var t = this,\n          i = e.find(\"tr:first\"),\n          n = {\n        id: i.find(\".node\")[0].id\n      };\n      return i.siblings(\":last\").children().each(function () {\n        n.children || (n.children = []), n.children.push(t.loopChart(u(this)));\n      }), n;\n    },\n    getHierarchy: function () {\n      if (void 0 === this.$chart) return \"Error: orgchart does not exist\";\n      if (!this.$chart.find(\".node\").length) return \"Error: nodes do not exist\";\n      var e = !0;\n      return this.$chart.find(\".node\").each(function () {\n        if (!this.id) return e = !1;\n      }), e ? this.loopChart(this.$chart) : \"Error: All nodes of orghcart to be exported must have data-id attribute!\";\n    },\n    getNodeState: function (e, t) {\n      var i = {};\n\n      if (\"parent\" === (t = t || \"self\")) {\n        if ((i = e.closest(\".nodes\").siblings(\":first\")).length) return i.is(\".hidden\") || !i.is(\".hidden\") && i.closest(\".nodes\").is(\".hidden\") ? {\n          exist: !0,\n          visible: !1\n        } : {\n          exist: !0,\n          visible: !0\n        };\n      } else if (\"children\" === t) {\n        if ((i = e.closest(\"tr\").siblings(\":last\")).length) return i.is(\".hidden\") ? {\n          exist: !0,\n          visible: !1\n        } : {\n          exist: !0,\n          visible: !0\n        };\n      } else if (\"siblings\" === t) {\n        if ((i = e.closest(\"table\").parent().siblings()).length) return i.is(\".hidden\") || i.parent().is(\".hidden\") ? {\n          exist: !0,\n          visible: !1\n        } : {\n          exist: !0,\n          visible: !0\n        };\n      } else if ((i = e).length) return i.closest(\".nodes\").length && i.closest(\".nodes\").is(\".hidden\") || i.closest(\"table\").parent().length && i.closest(\"table\").parent().is(\".hidden\") || i.parent().is(\"li\") && (i.closest(\"ul\").is(\".hidden\") || i.closest(\"verticalNodes\").is(\".hidden\")) ? {\n        exist: !0,\n        visible: !1\n      } : {\n        exist: !0,\n        visible: !0\n      };\n\n      return {\n        exist: !1,\n        visible: !1\n      };\n    },\n    getRelatedNodes: function (e, t) {\n      return e && e instanceof u && e.is(\".node\") ? \"parent\" === t ? e.closest(\".nodes\").parent().children(\":first\").find(\".node\") : \"children\" === t ? e.closest(\"tr\").siblings(\".nodes\").children().find(\".node:first\") : \"siblings\" === t ? e.closest(\"table\").parent().siblings().find(\".node:first\") : u() : u();\n    },\n    hideParentEnd: function (e) {\n      u(e.target).removeClass(\"sliding\"), e.data.upperLevel.addClass(\"hidden\").slice(1).removeAttr(\"style\");\n    },\n    hideParent: function (e) {\n      var t = e.closest(\".nodes\").siblings();\n      t.eq(0).find(\".spinner\").length && e.closest(\".orgchart\").data(\"inAjax\", !1), this.getNodeState(e, \"siblings\").visible && this.hideSiblings(e), t.slice(1).css(\"visibility\", \"hidden\");\n      var i = t.eq(0).find(\".node\");\n      this.getNodeState(i).visible && i.addClass(\"sliding slide-down\").one(\"transitionend\", {\n        upperLevel: t\n      }, this.hideParentEnd), this.getNodeState(i, \"parent\").visible && this.hideParent(i);\n    },\n    showParentEnd: function (e) {\n      var t = e.data.node;\n      u(e.target).removeClass(\"sliding\"), this.isInAction(t) && this.switchVerticalArrow(t.children(\".topEdge\"));\n    },\n    showParent: function (e) {\n      var t = e.closest(\".nodes\").siblings().removeClass(\"hidden\");\n      t.eq(2).children().slice(1, -1).addClass(\"hidden\");\n      var i = t.eq(0).find(\".node\");\n      this.repaint(i[0]), i.addClass(\"sliding\").removeClass(\"slide-down\").one(\"transitionend\", {\n        node: e\n      }, this.showParentEnd.bind(this));\n    },\n    stopAjax: function (e) {\n      e.find(\".spinner\").length && e.closest(\".orgchart\").data(\"inAjax\", !1);\n    },\n    isVisibleNode: function (e, t) {\n      return this.getNodeState(u(t)).visible;\n    },\n    hideChildrenEnd: function (e) {\n      var t = e.data.node;\n      e.data.animatedNodes.removeClass(\"sliding\"), e.data.isVerticalDesc ? e.data.lowerLevel.addClass(\"hidden\") : (e.data.animatedNodes.closest(\".nodes\").prevAll(\".lines\").removeAttr(\"style\").addBack().addClass(\"hidden\"), e.data.lowerLevel.last().find(\".verticalNodes\").addClass(\"hidden\")), this.isInAction(t) && this.switchVerticalArrow(t.children(\".bottomEdge\"));\n    },\n    hideChildren: function (e) {\n      var t = e.closest(\"tr\").siblings();\n      this.stopAjax(t.last());\n      var i = t.last().find(\".node\").filter(this.isVisibleNode.bind(this)),\n          n = !!t.last().is(\".verticalNodes\");\n      n || i.closest(\"table\").closest(\"tr\").prevAll(\".lines\").css(\"visibility\", \"hidden\"), this.repaint(i.get(0)), i.addClass(\"sliding slide-up\").eq(0).one(\"transitionend\", {\n        animatedNodes: i,\n        lowerLevel: t,\n        isVerticalDesc: n,\n        node: e\n      }, this.hideChildrenEnd.bind(this));\n    },\n    showChildrenEnd: function (e) {\n      var t = e.data.node;\n      e.data.animatedNodes.removeClass(\"sliding\"), this.isInAction(t) && this.switchVerticalArrow(t.children(\".bottomEdge\"));\n    },\n    showChildren: function (e) {\n      var t = e.closest(\"tr\").siblings(),\n          i = !!t.is(\".verticalNodes\") ? t.removeClass(\"hidden\").find(\".node\").filter(this.isVisibleNode.bind(this)) : t.removeClass(\"hidden\").eq(2).children().find(\".node:first\").filter(this.isVisibleNode.bind(this));\n      this.repaint(i.get(0)), i.addClass(\"sliding\").removeClass(\"slide-up\").eq(0).one(\"transitionend\", {\n        node: e,\n        animatedNodes: i\n      }, this.showChildrenEnd.bind(this));\n    },\n    hideSiblingsEnd: function (e) {\n      var t = e.data.node,\n          i = e.data.nodeContainer,\n          n = e.data.direction;\n      e.data.lines.removeAttr(\"style\");\n      var s = n ? \"left\" === n ? i.prevAll(\":not(.hidden)\") : i.nextAll(\":not(.hidden)\") : i.siblings();\n      i.closest(\".nodes\").prev().children(\":not(.hidden)\").slice(1, n ? 2 * s.length + 1 : -1).addClass(\"hidden\"), e.data.animatedNodes.removeClass(\"sliding\"), s.find(\".node:gt(0)\").filter(this.isVisibleNode.bind(this)).removeClass(\"slide-left slide-right\").addClass(\"slide-up\"), s.find(\".lines, .nodes, .verticalNodes\").addClass(\"hidden\").end().addClass(\"hidden\"), this.isInAction(t) && this.switchHorizontalArrow(t);\n    },\n    hideSiblings: function (e, t) {\n      var i = e.closest(\"table\").parent();\n      i.siblings().find(\".spinner\").length && e.closest(\".orgchart\").data(\"inAjax\", !1), t ? \"left\" === t ? i.prevAll().find(\".node\").filter(this.isVisibleNode.bind(this)).addClass(\"sliding slide-right\") : i.nextAll().find(\".node\").filter(this.isVisibleNode.bind(this)).addClass(\"sliding slide-left\") : (i.prevAll().find(\".node\").filter(this.isVisibleNode.bind(this)).addClass(\"sliding slide-right\"), i.nextAll().find(\".node\").filter(this.isVisibleNode.bind(this)).addClass(\"sliding slide-left\"));\n      var n = i.siblings().find(\".sliding\"),\n          s = n.closest(\".nodes\").prevAll(\".lines\").css(\"visibility\", \"hidden\");\n      n.eq(0).one(\"transitionend\", {\n        node: e,\n        nodeContainer: i,\n        direction: t,\n        animatedNodes: n,\n        lines: s\n      }, this.hideSiblingsEnd.bind(this));\n    },\n    showSiblingsEnd: function (e) {\n      var t = e.data.node;\n      e.data.visibleNodes.removeClass(\"sliding\"), this.isInAction(t) && (this.switchHorizontalArrow(t), t.children(\".topEdge\").removeClass(\"fa-chevron-up\").addClass(\"fa-chevron-down\"));\n    },\n    showRelatedParentEnd: function (e) {\n      u(e.target).removeClass(\"sliding\");\n    },\n    showSiblings: function (e, t) {\n      var i = u();\n      i = t ? \"left\" === t ? e.closest(\"table\").parent().prevAll().removeClass(\"hidden\") : e.closest(\"table\").parent().nextAll().removeClass(\"hidden\") : e.closest(\"table\").parent().siblings().removeClass(\"hidden\");\n      var n = e.closest(\"table\").closest(\"tr\").siblings();\n\n      if (t ? n.eq(2).children(\".hidden\").slice(0, 2 * i.length).removeClass(\"hidden\") : n.eq(2).children(\".hidden\").removeClass(\"hidden\"), !this.getNodeState(e, \"parent\").visible) {\n        n.removeClass(\"hidden\");\n        var s = n.find(\".node\")[0];\n        this.repaint(s), u(s).addClass(\"sliding\").removeClass(\"slide-down\").one(\"transitionend\", this.showRelatedParentEnd);\n      }\n\n      var a = i.find(\".node\").filter(this.isVisibleNode.bind(this));\n      this.repaint(a.get(0)), a.addClass(\"sliding\").removeClass(\"slide-left slide-right\"), a.eq(0).one(\"transitionend\", {\n        node: e,\n        visibleNodes: a\n      }, this.showSiblingsEnd.bind(this));\n    },\n    startLoading: function (e) {\n      var t = this.$chart;\n      return (void 0 === t.data(\"inAjax\") || !0 !== t.data(\"inAjax\")) && (e.addClass(\"hidden\"), e.parent().append('<i class=\"fa fa-circle-o-notch fa-spin spinner\"></i>').children().not(\".spinner\").css(\"opacity\", .2), t.data(\"inAjax\", !0), u(\".oc-export-btn\" + (\"\" !== this.options.chartClass ? \".\" + this.options.chartClass : \"\")).prop(\"disabled\", !0), !0);\n    },\n    endLoading: function (e) {\n      var t = e.parent();\n      e.removeClass(\"hidden\"), t.find(\".spinner\").remove(), t.children().removeAttr(\"style\"), this.$chart.data(\"inAjax\", !1), u(\".oc-export-btn\" + (\"\" !== this.options.chartClass ? \".\" + this.options.chartClass : \"\")).prop(\"disabled\", !1);\n    },\n    isInAction: function (e) {\n      return -1 < e.children(\".edge\").attr(\"class\").indexOf(\"fa-\");\n    },\n    switchVerticalArrow: function (e) {\n      e.toggleClass(\"fa-chevron-up\").toggleClass(\"fa-chevron-down\");\n    },\n    switchHorizontalArrow: function (e) {\n      var t = this.options;\n\n      if (t.toggleSiblingsResp && (void 0 === t.ajaxURL || e.closest(\".nodes\").data(\"siblingsLoaded\"))) {\n        var i = e.closest(\"table\").parent().prev();\n        i.length && (i.is(\".hidden\") ? e.children(\".leftEdge\").addClass(\"fa-chevron-left\").removeClass(\"fa-chevron-right\") : e.children(\".leftEdge\").addClass(\"fa-chevron-right\").removeClass(\"fa-chevron-left\"));\n        var n = e.closest(\"table\").parent().next();\n        n.length && (n.is(\".hidden\") ? e.children(\".rightEdge\").addClass(\"fa-chevron-right\").removeClass(\"fa-chevron-left\") : e.children(\".rightEdge\").addClass(\"fa-chevron-left\").removeClass(\"fa-chevron-right\"));\n      } else {\n        var s = e.closest(\"table\").parent().siblings(),\n            a = !!s.length && !s.is(\".hidden\");\n        e.children(\".leftEdge\").toggleClass(\"fa-chevron-right\", a).toggleClass(\"fa-chevron-left\", !a), e.children(\".rightEdge\").toggleClass(\"fa-chevron-left\", a).toggleClass(\"fa-chevron-right\", !a);\n      }\n    },\n    repaint: function (e) {\n      e && (e.style.offsetWidth = e.offsetWidth);\n    },\n    nodeEnterLeaveHandler: function (e) {\n      var t = u(e.delegateTarget),\n          i = !1,\n          n = t.children(\".topEdge\"),\n          s = (t.children(\".rightEdge\"), t.children(\".bottomEdge\")),\n          a = t.children(\".leftEdge\");\n      \"mouseenter\" === e.type ? (n.length && (i = this.getNodeState(t, \"parent\").visible, n.toggleClass(\"fa-chevron-up\", !i).toggleClass(\"fa-chevron-down\", i)), s.length && (i = this.getNodeState(t, \"children\").visible, s.toggleClass(\"fa-chevron-down\", !i).toggleClass(\"fa-chevron-up\", i)), a.length && this.switchHorizontalArrow(t)) : t.children(\".edge\").removeClass(\"fa-chevron-up fa-chevron-down fa-chevron-right fa-chevron-left\");\n    },\n    nodeClickHandler: function (e) {\n      this.$chart.find(\".focused\").removeClass(\"focused\"), u(e.delegateTarget).addClass(\"focused\");\n    },\n    loadNodes: function (t, e, i) {\n      var n = this;\n      this.options;\n      u.ajax({\n        url: e,\n        dataType: \"json\"\n      }).done(function (e) {\n        n.$chart.data(\"inAjax\") && (\"parent\" === t ? u.isEmptyObject(e) || n.addParent(i.parent(), e) : \"children\" === t ? e.children.length && n.addChildren(i.parent(), e[t]) : n.addSiblings(i.parent(), e.siblings ? e.siblings : e));\n      }).fail(function () {\n        console.log(\"Failed to get \" + t + \" data\");\n      }).always(function () {\n        n.endLoading(i);\n      });\n    },\n    HideFirstParentEnd: function (e) {\n      var t = e.data.topEdge,\n          i = t.parent();\n      this.isInAction(i) && (this.switchVerticalArrow(t), this.switchHorizontalArrow(i));\n    },\n    topEdgeClickHandler: function (e) {\n      e.stopPropagation();\n      var t = u(e.target),\n          i = u(e.delegateTarget),\n          n = this.getNodeState(i, \"parent\");\n\n      if (n.exist) {\n        var s = i.closest(\"table\").closest(\"tr\").siblings(\":first\").find(\".node\");\n        if (s.is(\".sliding\")) return;\n        n.visible ? (this.hideParent(i), s.one(\"transitionend\", {\n          topEdge: t\n        }, this.HideFirstParentEnd.bind(this))) : this.showParent(i);\n      } else if (this.startLoading(t)) {\n        var a = this.options,\n            o = u.isFunction(a.ajaxURL.parent) ? a.ajaxURL.parent(i.data(\"nodeData\")) : a.ajaxURL.parent + i[0].id;\n        this.loadNodes(\"parent\", o, t);\n      }\n    },\n    bottomEdgeClickHandler: function (e) {\n      e.stopPropagation();\n      var t = u(e.target),\n          i = u(e.delegateTarget),\n          n = this.getNodeState(i, \"children\");\n\n      if (n.exist) {\n        if (i.closest(\"tr\").siblings(\":last\").find(\".sliding\").length) return;\n        n.visible ? this.hideChildren(i) : this.showChildren(i);\n      } else if (this.startLoading(t)) {\n        var s = this.options,\n            a = u.isFunction(s.ajaxURL.children) ? s.ajaxURL.children(i.data(\"nodeData\")) : s.ajaxURL.children + i[0].id;\n        this.loadNodes(\"children\", a, t);\n      }\n    },\n    hEdgeClickHandler: function (e) {\n      e.stopPropagation();\n      var t = u(e.target),\n          i = u(e.delegateTarget),\n          n = this.options,\n          s = this.getNodeState(i, \"siblings\");\n\n      if (s.exist) {\n        if (i.closest(\"table\").parent().siblings().find(\".sliding\").length) return;\n\n        if (n.toggleSiblingsResp) {\n          var a = i.closest(\"table\").parent().prev(),\n              o = i.closest(\"table\").parent().next();\n          t.is(\".leftEdge\") ? a.is(\".hidden\") ? this.showSiblings(i, \"left\") : this.hideSiblings(i, \"left\") : o.is(\".hidden\") ? this.showSiblings(i, \"right\") : this.hideSiblings(i, \"right\");\n        } else s.visible ? this.hideSiblings(i) : this.showSiblings(i);\n      } else if (this.startLoading(t)) {\n        var d = i[0].id,\n            r = this.getNodeState(i, \"parent\").exist ? u.isFunction(n.ajaxURL.siblings) ? n.ajaxURL.siblings(i.data(\"nodeData\")) : n.ajaxURL.siblings + d : u.isFunction(n.ajaxURL.families) ? n.ajaxURL.families(i.data(\"nodeData\")) : n.ajaxURL.families + d;\n        this.loadNodes(\"siblings\", r, t);\n      }\n    },\n    expandVNodesEnd: function (e) {\n      e.data.vNodes.removeClass(\"sliding\");\n    },\n    collapseVNodesEnd: function (e) {\n      e.data.vNodes.removeClass(\"sliding\").closest(\"ul\").addClass(\"hidden\");\n    },\n    toggleVNodes: function (e) {\n      var t = u(e.target),\n          i = t.parent().next(),\n          n = i.find(\".node\"),\n          s = i.children().children(\".node\");\n      s.is(\".sliding\") || (t.toggleClass(\"fa-plus-square fa-minus-square\"), n.eq(0).is(\".slide-up\") ? (i.removeClass(\"hidden\"), this.repaint(s.get(0)), s.addClass(\"sliding\").removeClass(\"slide-up\").eq(0).one(\"transitionend\", {\n        vNodes: s\n      }, this.expandVNodesEnd)) : (n.addClass(\"sliding slide-up\").eq(0).one(\"transitionend\", {\n        vNodes: n\n      }, this.collapseVNodesEnd), n.find(\".toggleBtn\").removeClass(\"fa-minus-square\").addClass(\"fa-plus-square\")));\n    },\n    createGhostNode: function (e) {\n      var t,\n          i,\n          n = u(e.target),\n          s = this.options,\n          a = e.originalEvent,\n          o = /firefox/.test(p.navigator.userAgent.toLowerCase());\n      f.querySelector(\".ghost-node\") ? (t = n.closest(\".orgchart\").children(\".ghost-node\").get(0), i = u(t).children().get(0)) : ((t = f.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\")).classList.add(\"ghost-node\"), i = f.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\"), t.appendChild(i), n.closest(\".orgchart\").append(t));\n      var d = n.closest(\".orgchart\").css(\"transform\").split(\",\"),\n          r = \"t2b\" === s.direction || \"b2t\" === s.direction,\n          l = Math.abs(p.parseFloat(r ? d[0].slice(d[0].indexOf(\"(\") + 1) : d[1]));\n      t.setAttribute(\"width\", r ? n.outerWidth(!1) : n.outerHeight(!1)), t.setAttribute(\"height\", r ? n.outerHeight(!1) : n.outerWidth(!1)), i.setAttribute(\"x\", 5 * l), i.setAttribute(\"y\", 5 * l), i.setAttribute(\"width\", 120 * l), i.setAttribute(\"height\", 40 * l), i.setAttribute(\"rx\", 4 * l), i.setAttribute(\"ry\", 4 * l), i.setAttribute(\"stroke-width\", 1 * l);\n      var h = a.offsetX * l,\n          c = a.offsetY * l;\n\n      if (\"l2r\" === s.direction ? (h = a.offsetY * l, c = a.offsetX * l) : \"r2l\" === s.direction ? (h = n.outerWidth(!1) - a.offsetY * l, c = a.offsetX * l) : \"b2t\" === s.direction && (h = n.outerWidth(!1) - a.offsetX * l, c = n.outerHeight(!1) - a.offsetY * l), o) {\n        i.setAttribute(\"fill\", \"rgb(255, 255, 255)\"), i.setAttribute(\"stroke\", \"rgb(191, 0, 0)\");\n        var g = f.createElement(\"img\");\n        g.src = \"data:image/svg+xml;utf8,\" + new XMLSerializer().serializeToString(t), a.dataTransfer.setDragImage(g, h, c);\n      } else a.dataTransfer.setDragImage(t, h, c);\n    },\n    filterAllowedDropNodes: function (i) {\n      var n = this.options,\n          s = i.closest(\".nodes\").siblings().eq(0).find(\".node:first\"),\n          a = i.closest(\"table\").find(\".node\");\n      this.$chart.data(\"dragged\", i).find(\".node\").each(function (e, t) {\n        -1 === a.index(t) && (n.dropCriteria ? n.dropCriteria(i, s, u(t)) && u(t).addClass(\"allowedDrop\") : u(t).addClass(\"allowedDrop\"));\n      });\n    },\n    dragstartHandler: function (e) {\n      e.originalEvent.dataTransfer.setData(\"text/html\", \"hack for firefox\"), \"none\" !== this.$chart.css(\"transform\") && this.createGhostNode(e), this.filterAllowedDropNodes(u(e.target));\n    },\n    dragoverHandler: function (e) {\n      e.preventDefault(), u(e.delegateTarget).is(\".allowedDrop\") || (e.originalEvent.dataTransfer.dropEffect = \"none\");\n    },\n    dragendHandler: function (e) {\n      this.$chart.find(\".allowedDrop\").removeClass(\"allowedDrop\");\n    },\n    dropHandler: function (e) {\n      var t = u(e.delegateTarget),\n          i = this.$chart.data(\"dragged\"),\n          n = i.closest(\".nodes\").siblings().eq(0).children(),\n          s = u.Event(\"nodedrop.orgchart\");\n\n      if (this.$chart.trigger(s, {\n        draggedNode: i,\n        dragZone: n.children(),\n        dropZone: t\n      }), !s.isDefaultPrevented()) {\n        if (t.closest(\"tr\").siblings().length) {\n          var a = parseInt(t.parent().attr(\"colspan\")) + 2,\n              o = '<i class=\"edge horizontalEdge rightEdge fa\"></i><i class=\"edge horizontalEdge leftEdge fa\"></i>';\n          t.closest(\"tr\").next().addBack().children().attr(\"colspan\", a), i.find(\".horizontalEdge\").length || i.append(o), t.closest(\"tr\").siblings().eq(1).children(\":last\").before('<td class=\"leftLine topLine\"></td><td class=\"rightLine topLine\"></td>').end().next().append(i.closest(\"table\").parent());\n          var d = i.closest(\"table\").parent().siblings().find(\".node:first\");\n          1 === d.length && d.append(o);\n        } else t.append('<i class=\"edge verticalEdge bottomEdge fa\"></i>').parent().attr(\"colspan\", 2).parent().after('<tr class=\"lines\"><td colspan=\"2\"><div class=\"downLine\"></div></td></tr><tr class=\"lines\"><td class=\"rightLine\"></td><td class=\"leftLine\"></td></tr><tr class=\"nodes\"></tr>').siblings(\":last\").append(i.find(\".horizontalEdge\").remove().end().closest(\"table\").parent());\n\n        var r = parseInt(n.attr(\"colspan\"));\n\n        if (2 < r) {\n          n.attr(\"colspan\", r - 2).parent().next().children().attr(\"colspan\", r - 2).end().next().children().slice(1, 3).remove();\n          var l = n.parent().siblings(\".nodes\").children().find(\".node:first\");\n          1 === l.length && l.find(\".horizontalEdge\").remove();\n        } else n.removeAttr(\"colspan\").find(\".bottomEdge\").remove().end().end().siblings().remove();\n      }\n    },\n    touchstartHandler: function (e) {\n      console.log(\"orgChart: touchstart 1: touchHandled=\" + this.touchHandled + \", touchMoved=\" + this.touchMoved + \", target=\" + e.target.innerText), this.touchHandled || (this.touchHandled = !0, this.touchMoved = !1, e.preventDefault());\n    },\n    touchmoveHandler: function (e) {\n      if (this.touchHandled) {\n        if (e.preventDefault(), !this.touchMoved) {\n          u(this).hasClass(\"focused\");\n          console.log(\"orgChart: touchmove 1: \" + e.touches.length + \" touches, we have not moved, so simulate a drag start\", e.touches), this.simulateMouseEvent(e, \"dragstart\");\n        }\n\n        this.touchMoved = !0;\n        var t = u(f.elementFromPoint(e.touches[0].clientX, e.touches[0].clientY)).closest(\"div.node\");\n\n        if (0 < t.length) {\n          var i = t[0];\n          t.is(\".allowedDrop\") ? (console.log(\"orgChart: touchmove 2: this node (\" + i.id + \") is allowed to be a drop target\"), this.touchTargetNode = i) : (console.log(\"orgChart: touchmove 3: this node (\" + i.id + \") is NOT allowed to be a drop target\"), this.touchTargetNode = null);\n        } else console.log(\"orgchart: touchmove 4: not touching a node\"), this.touchTargetNode = null;\n      }\n    },\n    touchendHandler: function (e) {\n      if (console.log(\"orgChart: touchend 1: touchHandled=\" + this.touchHandled + \", touchMoved=\" + this.touchMoved + \", \" + e.target.innerText + \" \"), this.touchHandled) {\n        if (this.touchMoved) {\n          if (this.touchTargetNode) {\n            console.log(\"orgChart: touchend 3: moved to a node, so simulating drop\");\n            var t = {\n              delegateTarget: this.touchTargetNode\n            };\n            this.dropHandler(t), this.touchTargetNode = null;\n          }\n\n          console.log(\"orgChart: touchend 4: simulating dragend\"), this.simulateMouseEvent(e, \"dragend\");\n        } else console.log(\"orgChart: touchend 5: moved, so simulating click\"), this.simulateMouseEvent(e, \"click\");\n\n        this.touchHandled = !1;\n      } else console.log(\"orgChart: touchend 2: not handled by us, so aborting\");\n    },\n    simulateMouseEvent: function (e, t) {\n      if (!(1 < e.originalEvent.touches.length)) {\n        var i = e.originalEvent.changedTouches[0],\n            n = f.createEvent(\"MouseEvents\");\n        n.initMouseEvent(t, !0, !0, p, 1, i.screenX, i.screenY, i.clientX, i.clientY, !1, !1, !1, !1, 0, null), e.target.dispatchEvent(n);\n      }\n    },\n    bindDragDrop: function (e) {\n      e.on(\"dragstart\", this.dragstartHandler.bind(this)).on(\"dragover\", this.dragoverHandler.bind(this)).on(\"dragend\", this.dragendHandler.bind(this)).on(\"drop\", this.dropHandler.bind(this)).on(\"touchstart\", this.touchstartHandler.bind(this)).on(\"touchmove\", this.touchmoveHandler.bind(this)).on(\"touchend\", this.touchendHandler.bind(this));\n    },\n    createNode: function (i) {\n      var e = this.options,\n          t = i.level;\n      i.children && u.each(i.children, function (e, t) {\n        t.parentId = i.id;\n      });\n      var n = u(\"<div\" + (e.draggable ? ' draggable=\"true\"' : \"\") + (i[e.nodeId] ? ' id=\"' + i[e.nodeId] + '\"' : \"\") + (i.parentId ? ' data-parent=\"' + i.parentId + '\"' : \"\") + \">\").addClass(\"node \" + (i.className || \"\") + (t > e.visibleLevel ? \" slide-up\" : \"\"));\n      e.nodeTemplate ? n.append(e.nodeTemplate(i)) : n.append('<div class=\"title\">' + i[e.nodeTitle] + \"</div>\").append(void 0 !== e.nodeContent ? '<div class=\"content\">' + (i[e.nodeContent] || \"\") + \"</div>\" : \"\");\n      var s = u.extend({}, i);\n      delete s.children, n.data(\"nodeData\", s);\n      var a = i.relationship || \"\";\n\n      if (e.verticalLevel && t >= e.verticalLevel) {\n        if (t + 1 > e.verticalLevel && Number(a.substr(2, 1))) {\n          var o = t + 1 > e.visibleLevel ? \"plus\" : \"minus\";\n          n.append('<i class=\"toggleBtn fa fa-' + o + '-square\"></i>');\n        }\n      } else Number(a.substr(0, 1)) && n.append('<i class=\"edge verticalEdge topEdge fa\"></i>'), Number(a.substr(1, 1)) && n.append('<i class=\"edge horizontalEdge rightEdge fa\"></i><i class=\"edge horizontalEdge leftEdge fa\"></i>'), Number(a.substr(2, 1)) && n.append('<i class=\"edge verticalEdge bottomEdge fa\"></i>').children(\".title\").prepend('<i class=\"fa ' + e.parentNodeSymbol + ' symbol\"></i>');\n\n      return n.on(\"mouseenter mouseleave\", this.nodeEnterLeaveHandler.bind(this)), n.on(\"click\", this.nodeClickHandler.bind(this)), n.on(\"click\", \".topEdge\", this.topEdgeClickHandler.bind(this)), n.on(\"click\", \".bottomEdge\", this.bottomEdgeClickHandler.bind(this)), n.on(\"click\", \".leftEdge, .rightEdge\", this.hEdgeClickHandler.bind(this)), n.on(\"click\", \".toggleBtn\", this.toggleVNodes.bind(this)), e.draggable && (this.bindDragDrop(n), this.touchHandled = !1, this.touchMoved = !1, this.touchTargetNode = null), e.createNode && e.createNode(n, i), n;\n    },\n    buildHierarchy: function (e, t) {\n      var i = this,\n          n = this.options,\n          s = 0;\n      s = t.level ? t.level : t.level = e.parentsUntil(\".orgchart\", \".nodes\").length + 1;\n      var a,\n          o = t.children,\n          d = !!o && o.length;\n\n      if (2 < Object.keys(t).length) {\n        var r = this.createNode(t);\n        n.verticalLevel && s >= n.verticalLevel ? e.append(r) : (a = u(\"<table>\"), e.append(a.append(u(\"<tr/>\").append(u(\"<td\" + (d ? ' colspan=\"' + 2 * o.length + '\"' : \"\") + \"></td>\").append(r)))));\n      }\n\n      if (d) {\n        var l,\n            h = s + 1 > n.visibleLevel || t.collapsed ? \" hidden\" : \"\",\n            c = !!(n.verticalLevel && s + 1 >= n.verticalLevel);\n        if (c) l = u(\"<ul>\"), h && s + 1 > n.verticalLevel && l.addClass(h), s + 1 === n.verticalLevel ? e.children(\"table\").append('<tr class=\"verticalNodes' + h + '\"><td></td></tr>').find(\".verticalNodes\").children().append(l) : e.append(l);else {\n          for (var g = u('<tr class=\"lines' + h + '\"><td colspan=\"' + 2 * o.length + '\"><div class=\"downLine\"></div></td></tr>'), p = '<tr class=\"lines' + h + '\"><td class=\"rightLine\"></td>', f = 1; f < o.length; f++) p += '<td class=\"leftLine topLine\"></td><td class=\"rightLine topLine\"></td>';\n\n          p += '<td class=\"leftLine\"></td></tr>', l = u('<tr class=\"nodes' + h + '\">'), 2 === Object.keys(t).length ? e.append(g).append(p).append(l) : a.append(g).append(p).append(l);\n        }\n        u.each(o, function () {\n          var e = u(c ? \"<li>\" : '<td colspan=\"2\">');\n          l.append(e), this.level = s + 1, i.buildHierarchy(e, this);\n        });\n      }\n    },\n    buildChildNode: function (e, t) {\n      e.find(\"td:first\").attr(\"colspan\", 2 * t.length), this.buildHierarchy(e, {\n        children: t\n      });\n    },\n    addChildren: function (e, t) {\n      this.buildChildNode(e.closest(\"table\"), t), e.children(\".bottomEdge\").length || e.append('<i class=\"edge verticalEdge bottomEdge fa\"></i>'), e.find(\".symbol\").length || e.children(\".title\").prepend('<i class=\"fa ' + this.options.parentNodeSymbol + ' symbol\"></i>'), this.isInAction(e) && this.switchVerticalArrow(e.children(\".bottomEdge\"));\n    },\n    buildParentNode: function (e, t) {\n      t.relationship = t.relationship || \"001\";\n      var i = u(\"<table>\").append(u(\"<tr>\").append(u('<td colspan=\"2\">').append(this.createNode(t)))).append('<tr class=\"lines\"><td colspan=\"2\"><div class=\"downLine\"></div></td></tr>').append('<tr class=\"lines\"><td class=\"rightLine\"></td><td class=\"leftLine\"></td></tr>');\n      this.$chart.prepend(i).children(\"table:first\").append('<tr class=\"nodes\"><td colspan=\"2\"></td></tr>').children(\"tr:last\").children().append(this.$chart.children(\"table\").last());\n    },\n    addParent: function (e, t) {\n      this.buildParentNode(e, t), e.children(\".topEdge\").length || e.children(\".title\").after('<i class=\"edge verticalEdge topEdge fa\"></i>'), this.isInAction(e) && this.switchVerticalArrow(e.children(\".topEdge\"));\n    },\n    complementLine: function (e, t, i) {\n      for (var n = \"\", s = 0; s < i; s++) n += '<td class=\"leftLine topLine\"></td><td class=\"rightLine topLine\"></td>';\n\n      e.parent().prevAll(\"tr:gt(0)\").children().attr(\"colspan\", 2 * t).end().next().children(\":first\").after(n);\n    },\n    buildSiblingNode: function (e, t) {\n      var i = u.isArray(t) ? t.length : t.children.length,\n          n = e.parent().is(\"td\") ? e.closest(\"tr\").children().length : 1,\n          s = n + i,\n          a = 1 < s ? Math.floor(s / 2 - 1) : 0;\n\n      if (e.parent().is(\"td\")) {\n        e.closest(\"tr\").prevAll(\"tr:last\");\n        e.closest(\"tr\").prevAll(\"tr:lt(2)\").remove(), this.buildChildNode(e.parent().closest(\"table\"), t);\n        var o = e.parent().closest(\"table\").children(\"tr:last\").children(\"td\");\n        1 < n ? this.complementLine(o.eq(0).before(e.closest(\"td\").siblings().addBack().unwrap()), s, n) : this.complementLine(o.eq(a).after(e.closest(\"td\").unwrap()), s, 1);\n      } else this.buildHierarchy(e.closest(\".orgchart\"), t), this.complementLine(e.next().children(\"tr:last\").children().eq(a).after(u('<td colspan=\"2\">').append(e)), s, 1);\n    },\n    addSiblings: function (e, t) {\n      this.buildSiblingNode(e.closest(\"table\"), t), e.closest(\".nodes\").data(\"siblingsLoaded\", !0), e.children(\".leftEdge\").length || e.children(\".topEdge\").after('<i class=\"edge horizontalEdge rightEdge fa\"></i><i class=\"edge horizontalEdge leftEdge fa\"></i>'), this.isInAction(e) && (this.switchHorizontalArrow(e), e.children(\".topEdge\").removeClass(\"fa-chevron-up\").addClass(\"fa-chevron-down\"));\n    },\n    removeNodes: function (e) {\n      var t = e.closest(\"table\").parent(),\n          i = t.parent().siblings();\n      t.is(\"td\") ? this.getNodeState(e, \"siblings\").exist ? (i.eq(2).children(\".topLine:lt(2)\").remove(), i.slice(0, 2).children().attr(\"colspan\", i.eq(2).children().length), t.remove()) : i.eq(0).children().removeAttr(\"colspan\").find(\".bottomEdge\").remove().end().end().siblings().remove() : t.add(t.siblings()).remove();\n    },\n    export: function (r, l) {\n      var h = this;\n      if (r = void 0 !== r ? r : this.options.exportFilename, l = void 0 !== l ? l : this.options.exportFileextension, u(this).children(\".spinner\").length) return !1;\n      var c = this.$chartContainer,\n          e = c.find(\".mask\");\n      e.length ? e.removeClass(\"hidden\") : c.append('<div class=\"mask\"><i class=\"fa fa-circle-o-notch fa-spin spinner\"></i></div>');\n      var t = c.addClass(\"canvasContainer\").find('.orgchart:not(\".hidden\")').get(0),\n          i = \"l2r\" === h.options.direction || \"r2l\" === h.options.direction;\n      html2canvas(t, {\n        width: i ? t.clientHeight : t.clientWidth,\n        height: i ? t.clientWidth : t.clientHeight,\n        onclone: function (e) {\n          u(e).find(\".canvasContainer\").css(\"overflow\", \"visible\").find('.orgchart:not(\".hidden\"):first').css(\"transform\", \"\");\n        },\n        onrendered: function (e) {\n          if (c.find(\".mask\").addClass(\"hidden\"), \"pdf\" === l.toLowerCase()) {\n            var t = {},\n                i = Math.floor(.2646 * e.width),\n                n = Math.floor(.2646 * e.height);\n            (t = n < i ? new jsPDF(\"l\", \"mm\", [i, n]) : new jsPDF(\"p\", \"mm\", [n, i])).addImage(e.toDataURL(), \"png\", 0, 0), t.save(r + \".pdf\");\n          } else {\n            var s = \"WebkitAppearance\" in f.documentElement.style,\n                a = !!p.sidebar,\n                o = \"Microsoft Internet Explorer\" === navigator.appName || \"Netscape\" === navigator.appName && -1 < navigator.appVersion.indexOf(\"Edge\");\n            if (!s && !a || o) p.navigator.msSaveBlob(e.msToBlob(), r + \".png\");else {\n              var d = \".oc-download-btn\" + (\"\" !== h.options.chartClass ? \".\" + h.options.chartClass : \"\");\n              c.find(d).length || c.append('<a class=\"oc-download-btn' + (\"\" !== h.options.chartClass ? \" \" + h.options.chartClass : \"\") + '\" download=\"' + r + '.png\"></a>'), c.find(d).attr(\"href\", e.toDataURL())[0].click();\n            }\n          }\n        }\n      }).then(function () {\n        c.removeClass(\"canvasContainer\");\n      }, function () {\n        c.removeClass(\"canvasContainer\");\n      });\n    }\n  }, u.fn.orgchart = function (e) {\n    return new t(this, e).init();\n  };\n});","map":null,"metadata":{},"sourceType":"script"}