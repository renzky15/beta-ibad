{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar equalsZero = function equalsZero(num) {\n  return num === 0;\n};\n\nvar errorMessage = 'CardStack component must have at least two child Card components. Please check the children of this CardStack instance.';\n\nvar CardStack =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(CardStack, _React$Component);\n\n  function CardStack(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    var children = props.children,\n        height = props.height,\n        initialCard = props.initialCard;\n    var childrenLength = children.length || 1;\n    var headerHeight = height / childrenLength;\n    if (childrenLength <= 1) throw new Error(errorMessage);\n    _this.initialTopOffsets = props.children.map(function (child, i) {\n      return equalsZero(i) ? 0 : headerHeight * i;\n    });\n    _this.state = {\n      topOffsets: _this.initialTopOffsets,\n      cardSelected: false\n    };\n    return _this;\n  }\n\n  var _proto = CardStack.prototype;\n\n  _proto.componentWillMount = function componentWillMount() {\n    if (this.props.initialCard >= this.props.children.length) console.warn('prop \"initialCard\" cannot be equal or greater than children.length');else if (this.props.initialCard >= 0) this.handleCardClick(this.props.initialCard);\n  };\n\n  _proto.handleCardClick = function handleCardClick(id, cb) {\n    var _this2 = this;\n\n    var initialState = {\n      topOffsets: [],\n      cardSelected: true\n    };\n    var cardSelected = this.state.cardSelected;\n\n    var nextState = function nextState(prev, offset, index) {\n      var newOffset = index === id ? 0 : _this2.props.height;\n      return {\n        cardSelected: !cardSelected,\n        topOffsets: prev.topOffsets.concat([cardSelected ? _this2.initialTopOffsets[index] : newOffset])\n      };\n    };\n\n    this.setState(this.state.topOffsets.reduce(nextState, initialState));\n    if (cb) cb(this.state.cardSelected, id);\n  };\n\n  _proto.renderCards = function renderCards() {\n    var _this3 = this;\n\n    var cloneCard = function cloneCard(child, i) {\n      return _react.default.cloneElement(child, {\n        key: i,\n        cardId: i,\n        hoverOffset: _this3.props.hoverOffset,\n        cardSelected: _this3.state.cardSelected,\n        height: _this3.props.height,\n        topOffset: _this3.state.topOffsets[i],\n        onClick: _this3.handleCardClick.bind(_this3)\n      });\n    };\n\n    return this.props.children.map(cloneCard);\n  };\n\n  _proto.render = function render() {\n    var stackStyles = _extends({}, styles, {\n      background: this.props.background,\n      height: this.props.height,\n      width: this.props.width\n    });\n\n    return _react.default.createElement(\"ul\", {\n      style: stackStyles\n    }, this.renderCards());\n  };\n\n  return CardStack;\n}(_react.default.Component);\n\nvar styles = {\n  display: 'flex',\n  flexDirection: 'column',\n  position: 'relative',\n  overflow: 'hidden',\n  padding: 0,\n  margin: 0\n};\nCardStack.propTypes = {\n  background: _propTypes.default.string,\n  height: _propTypes.default.number,\n  hoverOffset: _propTypes.default.number,\n  width: _propTypes.default.number,\n  initialCard: _propTypes.default.number\n};\nCardStack.defaultProps = {\n  width: 350,\n  height: 600,\n  bgColor: 'f8f8f8',\n  hoverOffset: 30,\n  initialCard: -1\n};\nvar _default = CardStack;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}